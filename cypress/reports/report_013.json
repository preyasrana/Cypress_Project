{
  "stats": {
    "suites": 10,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2022-05-09T07:15:45.087Z",
    "end": "2022-05-09T07:15:49.085Z",
    "duration": 3998,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0e05d1b-00f2-4837-aaaa-8bdfb9eb362a",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "file": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "23b21510-0649-44a0-aaf0-19c58b19a7bf",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 373,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "905755b8-07a1-4c72-86f6-0651514ee754",
              "parentUUID": "23b21510-0649-44a0-aaf0-19c58b19a7bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "905755b8-07a1-4c72-86f6-0651514ee754"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04122b28-aee9-4e22-b609-c8653ea66d2c",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "3f786e54-cc5a-4dd6-8e26-5d1f57b553ba",
              "parentUUID": "04122b28-aee9-4e22-b609-c8653ea66d2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "ec58c968-9925-4185-affa-31e1e1e70d35",
              "parentUUID": "04122b28-aee9-4e22-b609-c8653ea66d2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "c10a7687-9442-47d1-ae2b-c26c3d60f024",
              "parentUUID": "04122b28-aee9-4e22-b609-c8653ea66d2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f786e54-cc5a-4dd6-8e26-5d1f57b553ba",
            "ec58c968-9925-4185-affa-31e1e1e70d35",
            "c10a7687-9442-47d1-ae2b-c26c3d60f024"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d1286903-67a4-4dc2-9e49-dd339c294d92",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "d65e07eb-fa4a-4c11-874b-2298f7e27297",
              "parentUUID": "d1286903-67a4-4dc2-9e49-dd339c294d92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d65e07eb-fa4a-4c11-874b-2298f7e27297"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d3164de-2d57-4142-91f2-10753b940d31",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 364,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object ($schema, chromeWebSecurity, ...) } to have property 'defaultCommandTimeout' of 4000, but got 10000",
                "estack": "AssertionError: expected { Object ($schema, chromeWebSecurity, ...) } to have property 'defaultCommandTimeout' of 4000, but got 10000\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/2-advanced-examples/cypress_api.spec.js:173:30)",
                "diff": "- 10000\n+ 4000\n"
              },
              "uuid": "dc6e45df-8a54-4bc0-af01-d25aed2c7a6a",
              "parentUUID": "3d3164de-2d57-4142-91f2-10753b940d31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dc6e45df-8a54-4bc0-af01-d25aed2c7a6a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 364,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99e22875-101d-4af5-a55c-45979dbe96c1",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "86ec0935-1b8d-4651-a83f-e5bfbf07d32f",
              "parentUUID": "99e22875-101d-4af5-a55c-45979dbe96c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86ec0935-1b8d-4651-a83f-e5bfbf07d32f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4105e2dc-de10-497a-b211-d7d42e6372ed",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "9201eba4-72db-45fc-96e2-6935a3cec853",
              "parentUUID": "4105e2dc-de10-497a-b211-d7d42e6372ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9201eba4-72db-45fc-96e2-6935a3cec853"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24057643-c265-4f73-8c44-d6ff0b515557",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "ff4d2f78-0d85-43cd-befb-5428722461da",
              "parentUUID": "24057643-c265-4f73-8c44-d6ff0b515557",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff4d2f78-0d85-43cd-befb-5428722461da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c62d3cb1-dee1-4726-8b47-a72836b702bc",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "756d0e09-dbb5-49f2-a4e1-de5e62dd104a",
              "parentUUID": "c62d3cb1-dee1-4726-8b47-a72836b702bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "756d0e09-dbb5-49f2-a4e1-de5e62dd104a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4fbe6099-f005-4e5f-b6f9-15753c8e561f",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "f8b1dd08-74f8-4e1b-b92c-ee85710ff993",
              "parentUUID": "4fbe6099-f005-4e5f-b6f9-15753c8e561f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8b1dd08-74f8-4e1b-b92c-ee85710ff993"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c55b3b5f-955a-4ece-85f5-8f5007e65ba6",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "42373cd0-eeaa-4c5b-80e6-3eef254c44e5",
              "parentUUID": "c55b3b5f-955a-4ece-85f5-8f5007e65ba6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42373cd0-eeaa-4c5b-80e6-3eef254c44e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}